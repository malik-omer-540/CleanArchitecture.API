TEST TASK - DotNET Developer - 
Task Overview: User Management API 
You are required to build a small RESTful API for managing users using ASP.NET Core and 
applying clean architecture principles. 
Requirements 
• Create a User entity with the following fields:  
o Id (GUID) 
o Name 
o Email 
o CreatedAt (DateTime) 
• Implement the following API endpoints: 
o POST /users → create a new user 
o GET /users/{id} → get user by ID 
o PUT /users/{id} → update the full user 
o PATCH /users/{id} → update only the email 
o DELETE /users/{id} → delete user by ID 
Architecture & Code Quality 
• Follow Clean Architecture structure:  
o Domain, Application, Infrastructure, Web 
• Use Dependency Injection for services/repositories 
• Use DTOs for input/output models 
Validation 
• Validate input:  
o Name must not be empty 
o Email must be in valid format 
Middleware 
Implement two custom middleware components: 
• Global exception handling middleware (return 500 errors with a friendly message) 
• Request/response logging middleware (log method, URL, status code, response time) 
LINQ Requirement 
Use LINQ to communicate with the database. 
Unit Tests 
• Add unit tests for the service layer 
• Use a testing framework like xUnit or NUnit 
• Write tests for:  
o Creating a user 
o Email updates 
o Deleting a user 
o LINQ filtering logic 
Note: For the submission: 
• Please share VS Solutions Files in a Zip folder. 